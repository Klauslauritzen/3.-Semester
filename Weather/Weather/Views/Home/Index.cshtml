@model Weather.Models.WeatherForecast.Root

<html>
<head>
    <title>Weather Forecast</title>
</head>
<body>
    <h1>Weather Forecast for Copenhagen</h1>

    @{
        var isDayTime = DateTime.UtcNow > DateTimeOffset.FromUnixTimeSeconds(Model.sys.sunrise) && DateTime.UtcNow < DateTimeOffset.FromUnixTimeSeconds(Model.sys.sunset);
        var timeOfDay = isDayTime ? "d" : "n";
        var weatherMain = Model.weather[0].main.ToLower();
        var weatherIconMap = new Dictionary<string, string>
    {
    { "clear sky", "01" },
    { "clouds", "02" },
    { "scattered clouds", "03" },
    { "broken clouds", "04" },
    { "shower rain", "05" },
    { "rain", "06" },
    { "thunderstorm", "07" },
    { "snow", "08" },
    { "mist", "09" },
    };
        var weatherIcon = weatherIconMap.ContainsKey(weatherMain) ? weatherIconMap[weatherMain] : "01";
    }

    <p>
    <p>@Model.weather[0].main - @Model.weather[0].description</p>
    <p>@(isDayTime ? "Day Time" : "Night Time")</p>

        @if (Model.weather.Count > 0)
        {
        <img src="@($"http://openweathermap.org/img/wn/{weatherIcon}{timeOfDay}@2x.png")" alt="@Model.weather[0].main">
        }
    </p>
    
    <p>Temp: @Model.main.temp &deg;C</p>
    <p>Feels Like: @Model.main.feels_like &deg;C</p>
    <p>Min Temp: @Model.main.temp_min &deg;C</p>
    <p>Max Temp: @Model.main.temp_max &deg;C</p>
    <p>pressure: @Model.main.pressure hPa</p>
    <p>humidity: @Model.main.humidity %</p>

    <h2>Wind</h2>
    <p>Wind Speed: @Model.wind.speed m/s</p>
    <p>Wind direktion: @Model.wind.deg &deg;</p>

    <h2>Clouds</h2>
    <p>cloud: @Model.clouds.all %</p>

</body>
</html>
